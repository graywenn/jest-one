# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type EnvironmentListType {
  name: String!
  value: String!
}

type JestTestType {
  event: String!
  path: String
  testId: String!
}

type Mutation {
  delEnvironment(Name: String!): Boolean!
  delTag(Name: String!): Boolean!
  setEnvironment(SetEnvironmentInput: SetEnvironmentInput!): Boolean!
  setTag(SetTagInput: SetTagInput!): Boolean!
  setTestTags(SetTestTagInput: SetTestTagInput!): Boolean!
  start(TestStartInput: TestStartInput!): String!
  stop: Boolean!
}

type Query {
  environmentList: [EnvironmentListType!]!
  environmentNames: [String!]!
  fileList: [TestFileListType!]!
  list: [TestListType!]!
  tagList: [TagListType!]!
  tagNames: [String!]!
  testResultList(TestResultListInput: TestResultListInput!): [TestResultListType!]!
  testTagList: [TestTagListType!]!
}

type ResultConsoleType {
  message: String!
  origin: String!
  type: String!
}

type ResultItemType {
  ancestorTitles: [String!]!
  duration: Float
  failureMessages: [String!]!
  fullName: String!
  status: String!
  title: String!
}

input SetEnvironmentInput {
  name: String!
  value: String
}

input SetTagInput {
  name: String!
}

input SetTestTagInput {
  name: String!
  tag: String
}

type Subscription {
  jestEvents: JestTestType!
}

type TagListType {
  name: String!
}

type TestFileItemType {
  name: String!
  parent: String
  tag: String
  type: String!
}

type TestFileListType {
  items: [TestFileItemType!]!
  path: String!
}

type TestItemType {
  console: [ResultConsoleType!]!
  failureMessage: String
  numFailingTests: Float!
  numPassingTests: Float!
  numPendingTests: Float!
  numTodoTests: Float!
  path: String!
  resultItems: [ResultItemType!]!
}

type TestListType {
  createTime: String
  environment: String!
  id: String!
  numFailingTests: Float!
  numPassingTests: Float!
  numPendingTests: Float!
  numTodoTests: Float!
  status: String!
  tag: String!
  totalDuration: Float!
}

input TestResultListInput {
  testId: String!
}

type TestResultListType {
  numFailingTests: Float!
  numPassingTests: Float!
  numPendingTests: Float!
  numTodoTests: Float!
  testId: String!
  testItems: [TestItemType!]!
  totalDuration: Float!
}

input TestStartInput {
  environment: String!
  tag: String!
}

type TestTagListType {
  name: String!
  tag: String!
}